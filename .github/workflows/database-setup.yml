name: Setup SQL Server Database

on: [push]

jobs:
  setup-db:
    runs-on: ubuntu-22.04  # Using a specific version for stability
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y curl apt-transport-https software-properties-common gnupg ca-certificates

      - name: Setup Microsoft repository and key (alternative method)
        run: |
          # Clean up any existing files
          sudo rm -f /usr/share/keyrings/microsoft-prod.gpg
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          
          # Download and install the Microsoft repository configuration
          curl -sSL https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          
          # Download the Microsoft GPG key directly
          sudo curl -sSL https://packages.microsoft.com/keys/microsoft.asc -o /usr/share/keyrings/microsoft-prod.gpg
          
          # Verify the key
          if [ ! -s /usr/share/keyrings/microsoft-prod.gpg ]; then
            echo "Error: GPG key file is empty or missing"
            exit 1
          fi

      - name: Update apt
        run: sudo apt-get update

      - name: Install SQL Server tools
        run: |
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Verify SQLCMD installation
        run: sqlcmd -?

      - name: Test SQL Server connection
        run: |
          sqlcmd -S "$SQL_SERVER" -U "$SQL_USER" -P "$SQL_PASSWORD" -Q "SELECT 1 AS connection_test;" -b -o test_output.log
          cat test_output.log
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

      - name: Run SQL Script
        run: |
          sqlcmd -S "$SQL_SERVER" -U "$SQL_USER" -P "$SQL_PASSWORD" -i setup.sql -b -o sql_output.log
          cat sql_output.log
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
