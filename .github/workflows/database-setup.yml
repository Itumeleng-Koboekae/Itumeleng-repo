name: Setup SQL Server Database

on: [push]

jobs:
  setup-db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y curl apt-transport-https software-properties-common gnupg

      - name: Import Microsoft GPG key (non-interactive)
        run: |
          curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --batch --dearmor -o /usr/share/keyrings/microsoft-prod.gpg

      - name: Add Microsoft SQL Server repository
        run: |
          echo "deb [arch=amd64,arm64,armhf signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/$(lsb_release -rs)/prod $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/microsoft-prod.list

      - name: Update apt
        run: sudo apt-get update

      - name: Install mssql-tools
        run: sudo apt-get install -y mssql-tools unixodbc-dev

      - name: Add SQL Server tools to PATH
        run: echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc

      - name: Verify SQLCMD installation
        run: sqlcmd -?

      - name: Debug print variables
        run: |
          echo "SQL_SERVER: $SQL_SERVER"
          echo "SQL_USER: $SQL_USER"
          echo "SQL_PASSWORD: ***"  # Masked for security
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

      - name: Test SQL Server connection
        run: |
          sqlcmd -S "$SQL_SERVER" -U "$SQL_USER" -P "$SQL_PASSWORD" -Q "SELECT 1 AS connection_test;" -b -o test_output.log
          cat test_output.log
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

      - name: Run SQL Script
        run: |
          sqlcmd -S "$SQL_SERVER" -U "$SQL_USER" -P "$SQL_PASSWORD" -i setup.sql -b -o sql_output.log
          cat sql_output.log
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
