name: Setup SQL Server Database

on: [push]

jobs:
  setup-db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y curl apt-transport-https software-properties-common

      - name: Import Microsoft GPG key
        run: curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -

      - name: Add Microsoft SQL Server repository
        run: sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list)"

      - name: Update apt
        run: sudo apt-get update

      - name: Install mssql-tools
        run: sudo apt-get install -y mssql-tools unixodbc-dev

      - name: Verify SQLCMD installation
        run: sqlcmd -?

      - name: Debug print variables
        run: |
          echo "SQL_SERVER: $SQL_SERVER"
          echo "SQL_USER: $SQL_USER"
          echo "SQL_PASSWORD: ***"  # Masked for security
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

      - name: Test SQL Server connection
        run: |
          sqlcmd -S "$SQL_SERVER" -U "$SQL_USER" -P "$SQL_PASSWORD" -Q "SELECT 1 AS connection_test;" -b -o test_output.log
          cat test_output.log
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

      - name: Run SQL Script
        run: |
          sqlcmd -S "$SQL_SERVER" -U "$SQL_USER" -P "$SQL_PASSWORD" -i setup.sql -b -o sql_output.log
          cat sql_output.log
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
